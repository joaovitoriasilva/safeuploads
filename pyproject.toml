[project]
name = "safeuploads"
version = "0.1.2"
description = "A comprehensive file security system for validating uploads and preventing attacks"
authors = [
    {name = "João Vitória Silva",email = "joao@endurain.com"}
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "python-magic (>=0.4.27,<0.5.0)",
]

[project.optional-dependencies]
fastapi = ["fastapi (>=0.110,<1.0)"]
dev = [
    "pytest (>=8.0,<9.0)",
    "pytest-asyncio (>=0.23,<1.0)",
    "pytest-cov (>=4.1,<5.0)",
]


[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
    "--cov=safeuploads",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "performance: Performance and benchmarking tests",
]

[tool.coverage.run]
source = ["safeuploads"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
